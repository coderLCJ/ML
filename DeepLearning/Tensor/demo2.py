import torch

# ----------------------------------------------------- #
# 索引
# ----------------------------------------------------- #

A = torch.arange(9).reshape((3, 3))
A += 1
print(A)

print(A[0:2])   # 左闭右开 从第1行到第2行
print(A[0,2])   # 第0行第2列的元素
print(A[0:2, :])    # 0到1行的所有列

# ----------------------------------------------------- #
# 内存开销
# ----------------------------------------------------- #
before = id(A)
A = A + 1
# A += 1                # 不会开辟新内存
print(before == id(A))  # id为实例ID 每个操作都会开辟新内存 因此为false

Z = torch.zeros_like(A) # 创建和A相同形状的矩阵
before = id(Z)
Z[:] = Z + 1            # 使用索引完成替换 此时不会开辟新内存
print(before == id(Z))  # 因此返回true

